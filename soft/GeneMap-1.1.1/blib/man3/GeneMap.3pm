.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "GeneMap 3"
.TH GeneMap 3 "2008-01-11" "perl v5.30.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
GeneMap \- A set of Perl modules designed to create high quality 
custom graphical maps of small genomes.
.SH "VERSION"
.IX Header "VERSION"
Version 0.01
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
The GeneMap package reads annotation information from the common
GeneBank sequence file format and generates high-resolution graphical 
maps in a range of image formats (\s-1TIFF, JPEG, PNG, GIF\s0 and \s-1PS\s0).
It has been specially designed an optimized for the display of
small organelle genomes but it may as well be used on any annotated
\&\s-1DNA\s0 sequence that is available as a GeneBank file or accession
number. The package contains different modules providing the \s-1API\s0
for circular (GeneMap::Plastome, GeneMap::Chondriome and GeneMap::Default)
or linear (GeneMap::Linear) maps. Please see the code examples below
as a starter. The detailed documentation of the specific classes 
has been included in \s-1POD\s0 format. So
.PP
.Vb 1
\&        perldoc GeneMap::Plastome ...
.Ve
.PP
and
.PP
.Vb 1
\&        perldoc GeneMap::Linear
.Ve
.PP
will give you all the dirty details.
.SS "Examples"
.IX Subsection "Examples"
.Vb 1
\& use GeneMap::Plastome;
\& 
\& # Create a new plastome object using the GenBank entry of the 
\& # tobacco chloroplast genome; include a %GC graph in the map
\& my $map = GeneMap::Plastome\->new( accnum => "Z00044",
\&                                   gc_cont => 1);
\&                                   
\& # ... or from a local GenBank file ...
\& my $nobelPrize = GeneMap::Plastome\->new( file => "/home/userX/myBreakthrough.gb",
\&                                          gc_cont => 0);
\&
\& # Automatically detect the inverted repeat borders and include
\& # them in the map \- this doesn\*(Aqt work if the irscan tool is 
\& # not properly installed
\& $map\->findIRborders();
\& 
\& # ...or specify them manually (values are not correct...)
\& $map\->setIRA(1, 100000); 
\& $map\->setIRB(100001, 150000);
\& 
\& # Read in a custom configuration file. Please read the FAQ
\& # section on our website L<http://ogdraw.mpimp\-golm.mpg.de/ssi_faqs.shtml>
\& # to learn more about configuration files
\& $map\->readDrawableFeatures(file => \*(AqmyConfig.xml\*(Aq);
\& 
\& # Write the map to a TIFF image
\& # other possible formats are \*(Aqjpg\*(Aq, \*(Aqpng\*(Aq, \*(Aqgif\*(Aq and \*(Aqps\*(Aq
\& # the map will be circular
\& $map\->createMap(outputfile => "plastome.tif", 
\&                 type => \*(Aqtif\*(Aq,
\&                 density => \*(Aq300x300\*(Aq);
\&                 
\&                 
\& use GeneMap::Linear;
\& 
\& # Create a linear map of the same chloroplast genome
\& my $linMap = GeneMap::Linear\->new( accnum => "Z00044",
\&                                   gc_cont => 1);
\& 
\& # Zoom into a smaller region 
\& $linMap\->setZoomRange(10000, 40000);
\& 
\& # write the map to a PostScript(R) file which can subsequently
\& # be edited manually using editors like Inkscape
\& $linMap\->createMap(outputfile => "linear_region.ps", 
\&                    type => \*(Aqps\*(Aq);
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 1
\& Marc Lohse and Oliver Drechsel, C<< <lohse<at>mpimp\-golm.mpg.de, drechsel<at>mpimp\-golm.mpg.de> >>
.Ve
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to
\&\f(CW\*(C`bug\-genemap at rt.cpan.org\*(C'\fR, or through the web interface at
<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=GeneMap>.
I will be notified, and then you'll automatically be notified of progress on
your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc GeneMap
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/GeneMap>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/GeneMap>
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=GeneMap>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/GeneMap>
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2008 Marc Lohse and Oliver Drechsel, all rights reserved.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
